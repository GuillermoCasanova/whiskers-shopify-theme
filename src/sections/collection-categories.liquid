
<div class="collectionCategories" data-categories-slideshow>
    <!-- Additional required wrapper -->
  <ul class="grid  grid--center  flex--noWrap  med-grid--flexDirectionColumn  grid--1of3  med-grid--top" >
    {% for link in linklists[section.settings.high-level-menu].links %}
     <li class="collectionCategories-category   grid-cell   {% if link.active %}is-active{% endif %}"   data-category-slide data-category-handle="{{ link.object.handle }}">
       <a href="{{ link.url }}" class="collectionCategories-category-link">{{ link.title }} <span class="collection-total">({{link.object.all_products_count}})</span></a>
     </li>
   {% endfor %}

   {% for link in linklists[section.settings.menu].links %}
      {%- assign child_list_handle = link.title | handleize -%}
      {% if menus[child_list_handle].links != blank %}
        <li class="collectionCategories-category  grid-cell  {% if link.active %}is-active{% endif %}" data-category-url="{{link.object.url}}" data-category-slide data-category-handle="{{ link.object.handle }}" data-child-categories="{% for childlink in menus[child_list_handle].links %}{{childlink.object.url}}{% unless forloop.last %},{% endunless %}{% endfor %}">
          <a href="{{ link.url }}">{{ link.title }} <span class="collection-total">({{link.object.all_products_count}})</span></a>
          <ul class="collectionCategories-childCategories is-showing show-for-medium-up">
            {% for childlink in menus[child_list_handle].links %}
              <li class="dropDown-item  collectionCategories-childCategories-childCategory {% if childlink.active %}is-active{% endif %}" data-child-category>
                <a href="{{ childlink.url }}">{{ childlink.title | escape }} <span class="collection-total">({{childlink.object.all_products_count}})</span></a>
              </li>
            {% endfor %}
          </ul>
          {%if link.active %}
            {%- assign activeLink = link.title -%}
          {%endif%}
        </li>
      {% else %}  
        <li class="collectionCategories-category   grid-cell  {% if link.active %}is-active{% endif %}"  data-category-url="{{link.object.url}}" data-category-slide data-category-handle="{{ link.object.handle }}">
          <a href="{{ link.url }}" class="collectionCategories-category-link">{{ link.title }} <span class="collection-total">({{link.object.all_products_count}})</span></a>
        </li>
      {% endif %}
    {% endfor %}
    </ul>
</div>


<div class="collectionChildCategories" data-child-categories-slideshow>
  {% for link in linklists[section.settings.menu].links %}
    {%-assign child_list_handle = link.title | handleize -%}
    {% if menus[child_list_handle].links != blank %}
    <ul class="collectionChildCategories-list  grid  grid--center  flex--noWrap" data-parent-category-handle="{{link.object.handle}}" data-child-categories-container>
      {% for childlink in menus[child_list_handle].links %}
        <li class="collectionChildCategories-childCategory  grid-cell  grid-cell--autoSize   {% if childlink.active %}is-active{% endif %}"  data-child-category>
          <a href="{{ childlink.url }}">{{ childlink.title | escape }}</a>
        </li>
      {% endfor %}
    </ul>
    {%endif%}
  {% endfor %}
</div>

{% javascript %}
//<script>
  $(window).on('load', function() {

    var collectionCategories = {
      selectors: {
        categoriesSlideshow: "[data-categories-slideshow]",
        categorySlide: "[data-category-slide]",
        childCategoriesContainer: "[data-child-categories-container]",
        childCategory: "[data-child-category]",
        childCategoriesSlideshow: "[data-child-categories-slideshow]"
      }, 
      goToActiveCategory:  function(pCategory) {

        var activeCategory = this.getSetActiveCategory()

        if(activeCategory) {
          var $activeSlide = $(activeCategory);
        } else {
          return false; 
        }

        var $categoriesSlideshow = $(this.selectors.categoriesSlideshow); 
        var position = $activeSlide.offset().left - ($categoriesSlideshow.width() / 3);
        $categoriesSlideshow.scrollLeft(position); 

        //
        // Checks if the currently active category has children or an active child category
        //
        if($activeSlide.data('child-link-active') || $activeSlide.data('child-categories')) {
          this.setActiveChildCategory($activeSlide.data('category-handle')); 
          $(this.selectors.childCategoriesSlideshow).toggleClass('is-active'); 
        }
      },
      setActiveChildCategory: function(pParentHandle) {

        var $childCategoriesContainers = $(this.selectors.childCategoriesContainer);
        var $categories = $(this.selectors.categorySlide);

        for(var i = 0; i < $childCategoriesContainers.length; i++) {
          if($($childCategoriesContainers[i]).data('parent-category-handle') == pParentHandle) {
            var $childCategoryList =  $($childCategoriesContainers[i]);
            $childCategoryList.addClass('is-active');

            var activeSlide = $childCategoryList.find('.is-active'),
                position = $(activeSlide).offset().left - 50 - ($(this.selectors.childCategoriesSlideshow).width() / 3),
                childCategoriesSlideshow =  $(this.selectors.childCategoriesSlideshow);

            childCategoriesSlideshow.scrollLeft(position); 
            break
          } 
        }
      },
      getSetActiveCategory: function() {
        var $categories = $(this.selectors.categorySlide); 

        for(var i = 0; i < $categories.length; i++) {
          var $categorySlide = $($categories[i]); 
          if($categorySlide.data('child-categories')) {
            var childCategories = $($categories[i]).data('child-categories').split(",");
            if(childCategories.indexOf(window.location.pathname) > -1) {
              $categorySlide.addClass('is-active');
              $categorySlide.data('child-link-active', true); 
              return $categories[i]; 
            }
          }

          if($categorySlide.data('category-url') === window.location.pathname) {
            $categorySlide.addClass('is-active');
            return $categories[i]; 
          }
        }

        return false;
      },
      init: function() {
        this.goToActiveCategory();
      }
    }; 

    collectionCategories.init(); 

  });
//</script>
{%endjavascript%}




{% schema %}
  {
    "name": "Collection Categories",
    "settings": [
      {
        "label": "Title",
        "id": "high-level-title",
        "type": "text"
      },
      {
        "label": "High Level Categories",
        "id": "high-level-menu",
        "type": "link_list"
      },
      {
        "label": "Title",
        "id": "title",
        "type": "text"
      },
      {
        "label": "Specific Products",
        "id": "menu",
        "type": "link_list"
      }
    ]
  }

{% endschema %}

  